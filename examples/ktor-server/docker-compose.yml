version: '3'

services:
  db:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: supertokens_user
      POSTGRES_PASSWORD: somePassword
      POSTGRES_DB: supertokens
    ports:
      - 5432:5432
    networks:
      - app_network
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'supertokens_user', '-d', 'supertokens']
      interval: 5s
      timeout: 5s
      retries: 5
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - app_network
    restart: unless-stopped
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:6.0
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://supertokens_user:somePassword@db:5432/supertokens"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
  supertokens-server:
    image: supertokens-ktor-example:1.0.3
    environment:
      SUPERTOKENS_URL: "http://supertokens:3567"
      SUPERTOKENS_FRONTEND_SCHEME: "http"
      SUPERTOKENS_FRONTEND_HOST: "localhost"
      SUPERTOKENS_FRONTEND_PATH: "/"
      SUPERTOKENS_ISSUER: "localhost"
      SMTP_USER: 
      SMTP_PW: 
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      - supertokens
    ports:
      - "8080:8080"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
volumes:
  db_data: